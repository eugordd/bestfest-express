version: "3"
services:
  nginx-proxy:
    container_name: nginx-proxy
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./volumes/nginx/conf:/etc/nginx/conf.d
      - ./volumes/nginx/vhost:/etc/nginx/vhost.d
      - ./volumes/nginx/html:/usr/share/nginx/html
      - ./volumes/nginx/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy-network

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes:
      - ./volumes/nginx/conf:/etc/nginx/conf.d
      - ./volumes/nginx/vhost:/etc/nginx/vhost.d
      - ./volumes/nginx/html:/usr/share/nginx/html
      - ./volumes/nginx/certs:/etc/nginx/certs:rw
      - ./volumes/nginx/acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - ACME_CA_URI=https://acme-staging-v02.api.letsencrypt.org/directory
    networks:
      - proxy-network

  nodejs:
    image: nodejs
    container_name: nodejs
    build: .
    restart: always
    ports:
      - "3000:3000"
    environment:
      - DOCKER=true
      - ENV=production
      - VIRTUAL_HOST=bestfest.gordey.dev
      - LETSENCRYPT_HOST=bestfest.gordey.dev
      - VIRTUAL_PORT=3000
    depends_on:
      - mongo

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: bestfest
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_DEFAULT_ADMIN_USERNAME: ${MONGO_DEFAULT_ADMIN_USERNAME}
      MONGO_DEFAULT_ADMIN_PASSWORD: ${MONGO_DEFAULT_ADMIN_PASSWORD}
    volumes:
      - db:/data/db
      - dbconfig:/data/configdb
      - ./devops/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro

volumes:
  db:
    driver: local
  dbconfig:
    driver: local

networks:
  proxy-network:
    driver: bridge